// <auto-generated />
using FindAMusicianAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FindAMusicianAPI.Migrations
{
    [DbContext(typeof(ArtistContext))]
    partial class ArtistContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("FindAMusicianAPI.Models.Artist", b =>
                {
                    b.Property<int>("ArtistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bio")
                        .HasColumnType("TEXT");

                    b.Property<int>("DownVote")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("UpVote")
                        .HasColumnType("INTEGER");

                    b.HasKey("ArtistID");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("FindAMusicianAPI.Models.ArtistMusicanType", b =>
                {
                    b.Property<int>("ArtistID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MusicanTypeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ArtistID", "MusicanTypeID");

                    b.HasIndex("MusicanTypeID");

                    b.ToTable("ArtistMusicanType");
                });

            modelBuilder.Entity("FindAMusicianAPI.Models.MusicanType", b =>
                {
                    b.Property<int>("MusicanTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("MusicanTypeID");

                    b.ToTable("MusicanType");
                });

            modelBuilder.Entity("FindAMusicianAPI.Models.ArtistMusicanType", b =>
                {
                    b.HasOne("FindAMusicianAPI.Models.Artist", "Artist")
                        .WithMany("ArtistMusicanType")
                        .HasForeignKey("ArtistID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FindAMusicianAPI.Models.MusicanType", "MusicanType")
                        .WithMany("ArtistMusicanType")
                        .HasForeignKey("MusicanTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("MusicanType");
                });

            modelBuilder.Entity("FindAMusicianAPI.Models.Artist", b =>
                {
                    b.Navigation("ArtistMusicanType");
                });

            modelBuilder.Entity("FindAMusicianAPI.Models.MusicanType", b =>
                {
                    b.Navigation("ArtistMusicanType");
                });
#pragma warning restore 612, 618
        }
    }
}
